# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term kitty
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
# add wofi
set $menu wofi --show run
#set $menu dmenu_path | wmenu | xargs swaymsg exec --

input "type:keyboard" {
    xkb_options caps:ctrl_modifier
}


#set $desktop_img /usr/share/backgrounds/default.png
#set $desktop_img /usr/share/backgrounds/joshua.jpg
set $desktop_img /usr/share/backgrounds/klingle-valley-trail.jpg
set $lock_img $desktop_img
### Output configuratio
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg $desktop_img fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#

### WIFI ###
# run
# `nmcli device wifi list`
# `nmcli device wifi connect`
# TO connect with a passwrod
# nmcli device wifi connect 'guest312' password 'beachtime'
# if you need a captive portal, use nm-connection-editor to disable wg auto connect
# then run sudo wg-quick down <connection>
# now you should be able to hit the captive portal.
# now wg-qucik up <conneciton>
# https://www.baeldung.com/linux/network-manager
# note, I disabled ipv6 because protonVPN wireguard doesn't support it
### Bluetooth ###
# bluetoothctl power on
# bluetoothctl
# scan on
# pair AA:BB:CC:DD:EE:FF
# trust AA:BB:CC:DD:EE:FF
# connect AA:BB:CC:DD:EE:FF
# exit

### Keybindings ###
# You can get the names of your outputs by running: swaymsg -t get_outputs
exec mako

bindsym Mod4+p       exec grimshot --notify save active
bindsym Mod4+Shift+p exec grimshot --notify save area
bindsym Mod4+Mod1+p  exec grimshot --notify save output
bindsym Mod4+Ctrl+p  exec grimshot --notify save window

### Idle configuration
#

 exec_always swayidle -w \
          timeout 300 'swaylock -f -i $lock_img' \
          timeout 800 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
          before-sleep 'swaylock -f -i $lock_img'

exec swayidle -w before-sleep 'swaylock -f -i $lock_img'
#swaylock -f -i $desktop_img
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 500 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
# for inputs, use swaymsg -t get_inputs
input "2362:628:PIXA3854:00_093A:0274_Touchpad" {
    dwt enabled
    tap enabled
    natural_scroll enabled
    middle_emulation enabled
}

input "6940:7059:Corsair_CORSAIR_KATAR_PRO_Gaming_Mouse" {
  natural_scroll enabled
  }

### Output configurations 
# eDP-1 is the builtin   
# DP-3 is home external, use swaymsg -t get_outputs to see outputs
set $laptop eDP-1
#output DP-3 res 2560x1440 scale 1
#set $resolution 1920x1080
set $resolution 2560x1440
output DP-3 res $resolution scale 1
output DP-2 res $resolution scale 1.5
exec_always ~/bin/swayclamshell.sh
# POSITIONS #
# if laptop is to the right of the monitor, then $laptop is resolution screen 0 Y / scale screen 0 Y (in this case 2560/1.5)
output DP-2 pos 0 0
output $laptop pos 1707 0
# DP-3
#output "Samsung Electric Company LU28R55 HCJR407168"
#   Current mode: 3840x2160 @ 60.000 Hz
#    1920x1200 @ 60.000 Hz
 

#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings
#
# Basics:
#
# lock screen
bindsym $mod+Ctrl+l exec swaylock -f -i $lock_img
# Start a terminal
bindsym $mod+Return exec $term

# Kill focused window
bindsym $mod+q kill

# Start your launcher
bindsym $mod+d exec $menu

# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
floating_modifier $mod normal
# Toggle floating and stacked layout
bindsym $mod+Shift+f exec "swaymsg [con_id=\"__focused__\"] floating toggle; if [ $(swaymsg -t get_tree | jq '.. | select(.type?) | select(.focused==true) | .layout') = \"floating\"] ; then swaymsg layout stacked ; fi"


# Reload the configuration file
bindsym $mod+Shift+c reload

# Exit sway (logs you out of your Wayland session)
bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
# Move your focus around
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right
# Or use $mod+[up|down|left|right]
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# Move the focused window with the same, but add Shift
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right
# Ditto, with arrow keys
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right
#
# Workspaces:
#
# Switch to workspace
bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
bindsym $mod+3 workspace number 3
bindsym $mod+4 workspace number 4
bindsym $mod+5 workspace number 5
bindsym $mod+6 workspace number 6
bindsym $mod+7 workspace number 7
bindsym $mod+8 workspace number 8
bindsym $mod+9 workspace number 9
bindsym $mod+0 workspace number 10
# Move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number 1
bindsym $mod+Shift+2 move container to workspace number 2
bindsym $mod+Shift+3 move container to workspace number 3
bindsym $mod+Shift+4 move container to workspace number 4
bindsym $mod+Shift+5 move container to workspace number 5
bindsym $mod+Shift+6 move container to workspace number 6
bindsym $mod+Shift+7 move container to workspace number 7
bindsym $mod+Shift+8 move container to workspace number 8
bindsym $mod+Shift+9 move container to workspace number 9
bindsym $mod+Shift+0 move container to workspace number 10
# Note: workspaces can have any name you want, not just numbers.
# We just use 1-10 as the default.

# App Placement
# Assign typical programs
assign [app_id="mainfox"] workspace 2
assign [app_id="email"] workspace 3
assign [app_id="org.keepassxc.KeePassXC"] workspace 5
assign [class="Logseq"] workspace 4

set $OZONE_PLATFORM wayland
exec_always --no-startup-id env OZONE_PLATFORM=$OZONE_PLATFORM
### Programs at startup
exec firefox --name=mainfox -P nick-home
exec keepassxc
exec firefox --name=email -P email https://mail.proton.me/u/0/inbox https://calendar.proton.me https://gmail.com
exec logseq

# hide titlebar
set $titlecolor "#ffe6ff"
#client.focused $titlecolor $titlecolor "#ffffff" "#9f1209"

set $my_titlebar {
    font pango:monospace 0.001
}

#for_window [app_id="org.mozilla.firefox"] $my_titlebar
#for_window #background "#ffffff"
gaps inner 10
smart_gaps off
titlebar_border_thickness 0
default_border pixel 1

for_window {
  [app_id=".*"] $my_titlebar
  [title="Pinboard - .*"] floating enable
  [window_role="pop-up"] floating enable
  [window_role="popup"] floating enable
  [window_role="bubble"] floating enable
  [window_role="dialog"] floating enable
  [window_type="dialog"] floating enable
  [app_id="org.gnome.Calculator"] floating enable
}

#default_border none
#hide_edge_borders both
font pango:monospace 0.001
bindsym XF86MonBrightnessUp exec light -A 10 #increase screen brightness
bindsym XF86MonBrightnessDown exec light -U 10 # decrease screen brightness

bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5%
bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%
bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle

#
# Layout stuff:
#
# multi monitor
bindsym $mod+greater move workspace to output right
bindsym $mod+less move workspace to output left
# You can "split" the current object of your focus with
# $mod+b or $mod+v, for horizontal and vertical splits
# respectively.
bindsym $mod+b splith
bindsym $mod+v splitv

# Switch the current container between different layout styles
bindsym $mod+s layout stacking
bindsym $mod+t layout tabbed
bindsym $mod+e layout splith
# Make the current focus fullscreen
bindsym $mod+f fullscreen

# Toggle the current focus between tiling and floating mode
bindsym $mod+Shift+space floating toggle

# Swap focus between the tiling area and the floating area
bindsym $mod+space focus mode_toggle

# Move focus to the parent container
bindsym $mod+a focus parent
#
# Scratchpad:
#
# Sway has a "scratchpad", which is a bag of holding for windows.
# You can send windows there and get them back later.

# Move the currently focused window to the scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
  swaybar_command waybar  
  }
#bar {
#    position bottom
#
#    # When the status_command prints a new line to stdout, swaybar updates.
#    status_command exec statusline.sh
#    colors {
#        statusline #ffffff
#        background #323232
#        inactive_workspace #32323200 #32323200 #5c5c5c
#    }
#}

# custom #
workspace_auto_back_and_forth yes

include /etc/sway/config.d/*
