---
- hosts: localhost
  vars:
    go_version: 1.22.5
    dependencies:
      - gcc
      - clang
      - vim
      - neovim
      - stow
      - git
      - tmux
      - fzf
      - rsync
      - rclone
      - make
      - ripgrep
      - xclip
      - sway
      - kitty
      - pipx
      - light
      - wofi
      - waybar
      - grimshot
      - mako
      - syncthing

  tasks:
    - name: Install essentials (Fedora)
      become: yes
      ansible.builtin.dnf:
        name: "{{ dependencies }}"
        state: latest
        update_cache: true

    - name: stow directories
      ansible.builtin.shell: stow "{{ item }}" 
      args:
        chdir: "{{ ansible_env.HOME }}/dotfiles"
      loop:
        - sway
        - vim
        - neovim
        - bin
        - bash
        - x
        - bin
        - tmux
        - waybar
        - syncthing

    - name: check current go go_version
      command: go go version 
      register: go_version_check
      changed_when: false
      failed_when: false
      check_mode: no

    - name: make home directories
      file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
      loop:
        - "${HOME}/screenshots"
        - "${HOME}/dev"
        - "${HOME}/personal"
        - "${HOME}/projects"

    - name: set standard startup vars
      become: yes
      lineinfile:
        path: /etc/profile.d/startup-vars.sh
        create: yes
        line: "{{ item }}"
        mode: '0644'
      loop:
        - 'export LANG=en_US.UTF-8'
        - 'export EDITOR=nvim'
        - 'export XDG_SCREENSHOTS_DIR=$HOME/screenshot'
        - 'export XDG_CONFIG_HOME=$HOME/.config'
        - 'export XDG_STATE_HOME=$HOME/.local/state'
        - 'export PATH=$PATH:/usr/bin'
        - 'export MOZ_ENABLE_WAYLAND=1'
        - 'export ELECTRON_OZONE_PLATFORM_HINT=auto'
        - 'export ELECTRON_ENABLE_FEATURES=UseOzonePlatform'
        - 'export CHROME_OZONE_PLATFORM_HINT=auto'
        - 'export CHROME_ENABLE_FEATURES=UseOzonePlatform'

    - name: set the current go version
      set_fact:
        current_go_version: "{{ go_version_check.stdout.split(' ')[2].replace('go','') if go_version_check.rc == 0 else 'none' }}"
      
    - name: install go "{{ go_version }}"
      when: current_go_version != go_version
      become: yes
      block:
        - name: Download Go "{{ go_version }}"
          get_url:
            url: "https://go.dev/dl/go{{ go_version }}.linux-amd64.tar.gz"
            dest: "/tmp/go{{ go_version }}.linux-amd64.tar.gz"
            mode: '0644'

        - name: Extract Go archive
          unarchive:
            src: "/tmp/go{{ go_version }}.linux-amd64.tar.gz"
            dest: /usr/local
            remote_src: yes

        - name: Set Go environment variables
          lineinfile:
            path: /etc/profile.d/go.sh
            create: yes
            line: "{{ item }}"
            mode: '0644'
          loop:
            - 'export GOPATH=$HOME/go'
            - 'export PATH=$GOPATH/bin:$PATH'
            - 'export PATH=$PATH:/usr/local/go/bin:$HOME/go/bin'

        - name: Ensure Go binary is in PATH for the current session
          ansible.builtin.shell: . /etc/profile.d/go.sh

    - name: check for gopls
      ansible.builtin.command: "which gopls"
      register: gopls_check
      changed_when: false
      failed_when: false
      ignore_errors: true

    - name: install gopls
      ansible.builtin.shell: go install golang.org/x/tools/gopls@latest
      when: gopls_check.rc != 0 

    - name: configure systemd sleep service for hibernating
      become: yes
      community.general.ini_file:
        path: /etc/systemd/sleep.conf
        section: Sleep
        option: HibernateDelaySec
        value: 36000
        mode: '0600'
        state: present

    - name: configure systemd syncthing
      ansible.builtin.systemd_service:
        daemon_reload: true
        enabled: yes
        scope: user
        state: started
        name: syncthing.service

    - name: systemd config for login/locking
      become: yes
      community.general.ini_file:
        path: /etc/systemd/login.conf
        section: Login
        option: "{{ item.option }}"
        value: "{{ item.value }}"
        mode: '0600'
        state: present
      loop:
        - { option: "HandleSuspendKey", value: "suspend-then-hibernate" }
        - { option: "HandleLidSwitch", value: "suspend-then-hibernate" }

